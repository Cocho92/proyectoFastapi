// This file is auto-generated by @hey-api/openapi-ts

export type Body_errores_pami_procesar_excel = {
  archivo: Blob | File
}

export type Body_login_login_access_token = {
  grant_type?: string | null
  username: string
  password: string
  scope?: string
  client_id?: string | null
  client_secret?: string | null
}

/**
 * Esquema de respuesta del procesamiento
 */
export type ExcelProcessResponse = {
  mensaje: string
  archivo: string
  spreadsheet_key: string
  google_sheet_url: string
}

export type HTTPValidationError = {
  detail?: Array<ValidationError>
}

export type ItemCreate = {
  title: string
  description?: string | null
}

export type ItemPublic = {
  title: string
  description?: string | null
  id: string
  owner_id: string
}

export type ItemsPublic = {
  data: Array<ItemPublic>
  count: number
}

export type ItemUpdate = {
  title?: string | null
  description?: string | null
}

export type Message = {
  message: string
}

export type NewPassword = {
  token: string
  new_password: string
}

export type PrivateUserCreate = {
  email: string
  password: string
  full_name: string
  is_verified?: boolean
}

export type TaskCreate = {
  title: string
  description?: string | null
  due_date?: string | null
  status?: string
}

export type TaskPublic = {
  title: string
  description?: string | null
  due_date?: string | null
  status?: string
  id: string
  owner_id: string
  assignees?: Array<UserPublic>
}

export type TasksPublic = {
  data: Array<TaskPublic>
  count: number
}

export type TaskUpdate = {
  title?: string | null
  description?: string | null
  due_date?: string | null
  status?: string | null
}

export type Token = {
  access_token: string
  token_type?: string
}

export type UpdatePassword = {
  current_password: string
  new_password: string
}

export type UserCreate = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password: string
}

export type UserPublic = {
  email: string
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  id: string
}

export type UserRegister = {
  email: string
  password: string
  full_name?: string | null
}

export type UsersPublic = {
  data: Array<UserPublic>
  count: number
}

export type UserUpdate = {
  email?: string | null
  is_active?: boolean
  is_superuser?: boolean
  full_name?: string | null
  password?: string | null
}

export type UserUpdateMe = {
  full_name?: string | null
  email?: string | null
}

export type ValidationError = {
  loc: Array<string | number>
  msg: string
  type: string
}

export type ErroresPamiProcesarExcelData = {
  aplicarPatronesDefault?: boolean
  columnaAProcesar?: number
  formData: Body_errores_pami_procesar_excel
  spreadsheetKey?: string
}

export type ErroresPamiProcesarExcelResponse = ExcelProcessResponse

export type ItemsReadItemsData = {
  limit?: number
  skip?: number
}

export type ItemsReadItemsResponse = ItemsPublic

export type ItemsCreateItemData = {
  requestBody: ItemCreate
}

export type ItemsCreateItemResponse = ItemPublic

export type ItemsReadItemData = {
  id: string
}

export type ItemsReadItemResponse = ItemPublic

export type ItemsUpdateItemData = {
  id: string
  requestBody: ItemUpdate
}

export type ItemsUpdateItemResponse = ItemPublic

export type ItemsDeleteItemData = {
  id: string
}

export type ItemsDeleteItemResponse = Message

export type LoginLoginAccessTokenData = {
  formData: Body_login_login_access_token
}

export type LoginLoginAccessTokenResponse = Token

export type LoginTestTokenResponse = UserPublic

export type LoginRecoverPasswordData = {
  email: string
}

export type LoginRecoverPasswordResponse = Message

export type LoginResetPasswordData = {
  requestBody: NewPassword
}

export type LoginResetPasswordResponse = Message

export type LoginRecoverPasswordHtmlContentData = {
  email: string
}

export type LoginRecoverPasswordHtmlContentResponse = string

export type PrivateCreateUserData = {
  requestBody: PrivateUserCreate
}

export type PrivateCreateUserResponse = UserPublic

export type TasksReadTasksData = {
  limit?: number
  skip?: number
}

export type TasksReadTasksResponse = TasksPublic

export type TasksCreateTaskData = {
  requestBody: TaskCreate
}

export type TasksCreateTaskResponse = TaskPublic

export type TasksReadTaskData = {
  id: string
}

export type TasksReadTaskResponse = TaskPublic

export type TasksUpdateTaskData = {
  id: string
  requestBody: TaskUpdate
}

export type TasksUpdateTaskResponse = TaskPublic

export type TasksDeleteTaskData = {
  id: string
}

export type TasksDeleteTaskResponse = Message

export type TasksAssignUserToTaskData = {
  taskId: string
  userId: string
}

export type TasksAssignUserToTaskResponse = Message

export type TasksRemoveUserFromTaskData = {
  taskId: string
  userId: string
}

export type TasksRemoveUserFromTaskResponse = Message

export type UsersReadUsersData = {
  limit?: number
  skip?: number
}

export type UsersReadUsersResponse = UsersPublic

export type UsersCreateUserData = {
  requestBody: UserCreate
}

export type UsersCreateUserResponse = UserPublic

export type UsersReadUserMeResponse = UserPublic

export type UsersDeleteUserMeResponse = Message

export type UsersUpdateUserMeData = {
  requestBody: UserUpdateMe
}

export type UsersUpdateUserMeResponse = UserPublic

export type UsersUpdatePasswordMeData = {
  requestBody: UpdatePassword
}

export type UsersUpdatePasswordMeResponse = Message

export type UsersRegisterUserData = {
  requestBody: UserRegister
}

export type UsersRegisterUserResponse = UserPublic

export type UsersReadUserByIdData = {
  userId: string
}

export type UsersReadUserByIdResponse = UserPublic

export type UsersUpdateUserData = {
  requestBody: UserUpdate
  userId: string
}

export type UsersUpdateUserResponse = UserPublic

export type UsersDeleteUserData = {
  userId: string
}

export type UsersDeleteUserResponse = Message

export type UtilsTestEmailData = {
  emailTo: string
}

export type UtilsTestEmailResponse = Message

export type UtilsHealthCheckResponse = boolean
